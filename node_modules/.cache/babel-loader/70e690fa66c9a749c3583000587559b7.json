{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domen\\\\domenikos5.github.io\\\\Employee-Directory\\\\src\\\\components\\\\DataArea.js\";\nimport React, { Component } from \"react\";\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\nexport default class DataArea extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [{}],\n      order: \"descend\",\n      filteredUsers: [{}],\n      headings: [{\n        name: \"Image\",\n        width: \"10%\"\n      }, {\n        name: \"Name\",\n        width: \"10%\"\n      }, {\n        name: \"Phone\",\n        width: \"20%\"\n      }, {\n        name: \"Email\",\n        width: \"20%\"\n      }, {\n        name: \"DOB\",\n        width: \"10%\"\n      }],\n      handleSort: heading => {\n        if (this.state.order === \"descend\") {\n          this.setState({\n            order: \"ascend\"\n          });\n        } else {\n          this.setState({\n            order: \"descend\"\n          });\n        }\n\n        const compareFnc = (a, b) => {\n          if (this.state.order === \"ascend\") {\n            // account for missing values\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } // numerically\n            else if (heading === \"name\") {\n                return a[heading].first.localeCompare(b[heading].first);\n              } else {\n                return a[heading] - b[heading];\n              }\n          } else {\n            // account for missing values\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } // numerically\n            else if (heading === \"name\") {\n                return b[heading].first.localeCompare(a[heading].first);\n              } else {\n                return b[heading] - a[heading];\n              }\n          }\n        };\n\n        const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n        this.setState({\n          filteredUsers: sortedUsers\n        });\n      },\n      handleSearchChange: event => {\n        console.log(event.target.value);\n        const filter = event.target.value;\n        const filteredList = this.state.users.filter(item => {\n          // merge data together, then see if user input is anywhere inside\n          let values = Object.values(item).join(\"\").toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        this.setState({\n          filteredUsers: filteredList\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    API.getUsers().then(results => {\n      this.setState({\n        users: results.data.results,\n        filteredUsers: results.data.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav, {\n      handleSearchChange: this.state.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"data-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DataTable, {\n      headings: this.state.headings,\n      users: this.state.filteredUsers,\n      handleSort: this.state.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/domen/domenikos5.github.io/Employee-Directory/src/components/DataArea.js"],"names":["React","Component","DataTable","Nav","API","DataArea","constructor","state","users","order","filteredUsers","headings","name","width","handleSort","heading","setState","compareFnc","a","b","undefined","first","localeCompare","sortedUsers","sort","handleSearchChange","event","console","log","target","value","filter","filteredList","item","values","Object","join","toLowerCase","indexOf","componentDidMount","getUsers","then","results","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\nimport API from \"../utils/API\";\r\nimport \"../styles/DataArea.css\";\r\n\r\nexport default class DataArea extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [{}],\r\n      order: \"descend\",\r\n      filteredUsers: [{}],\r\n      headings: [\r\n        { name: \"Image\", width: \"10%\" },\r\n        { name: \"Name\", width: \"10%\" },\r\n        { name: \"Phone\", width: \"20%\" },\r\n        { name: \"Email\", width: \"20%\" },\r\n        { name: \"DOB\", width: \"10%\" }\r\n      ],\r\n\r\n      handleSort: heading => {\r\n\r\n        if (this.state.order === \"descend\") {\r\n          this.setState({\r\n            order: \"ascend\"\r\n          })\r\n        } else {\r\n          this.setState({\r\n            order: \"descend\"\r\n          })\r\n        }\r\n\r\n        const compareFnc = (a, b) => {\r\n          if (this.state.order === \"ascend\") {\r\n            // account for missing values\r\n            if (a[heading] === undefined) {\r\n              return 1;\r\n            } else if (b[heading] === undefined) {\r\n              return -1;\r\n            }\r\n            // numerically\r\n            else if (heading === \"name\") {\r\n              return a[heading].first.localeCompare(b[heading].first);\r\n            } else {\r\n              return a[heading] - b[heading];\r\n            }\r\n          } else {\r\n            // account for missing values\r\n            if (a[heading] === undefined) {\r\n              return 1;\r\n            } else if (b[heading] === undefined) {\r\n              return -1;\r\n            }\r\n            // numerically\r\n            else if (heading === \"name\") {\r\n              return b[heading].first.localeCompare(a[heading].first);\r\n            } else {\r\n              return b[heading] - a[heading];\r\n            }\r\n          }\r\n\r\n        }\r\n        const sortedUsers = this.state.filteredUsers.sort(compareFnc);\r\n        this.setState({ filteredUsers: sortedUsers });\r\n      },\r\n      handleSearchChange: event => {\r\n        console.log(event.target.value);\r\n        const filter = event.target.value;\r\n        const filteredList = this.state.users.filter(item => {\r\n          // merge data together, then see if user input is anywhere inside\r\n          let values = Object.values(item)\r\n            .join(\"\")\r\n            .toLowerCase();\r\n          return values.indexOf(filter.toLowerCase()) !== -1;\r\n        });\r\n        this.setState({ filteredUsers: filteredList });\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    API.getUsers().then(results => {\r\n      this.setState({\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav handleSearchChange={this.state.handleSearchChange} />\r\n        <div className=\"data-area\">\r\n          <DataTable\r\n            headings={this.state.headings}\r\n            users={this.state.filteredUsers}\r\n            handleSort={this.state.handleSort}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}